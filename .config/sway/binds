#
# Variables
#
set {
	# Logo key. Use Mod1 for Alt.
	$mod Mod4
	# Home row direction keys, like vim
	$left h
	$down j
	$up k
	$right l
	# Your preferred terminal emulator
	$term alacritty
	# Your preferred application launcher
	# Note: pass the final command to swaymsg so that the resulting window can be opened
	# on the original workspace that the command was run on.
	$menu rofi -show | xargs swaymsg exec --
}

#
# Basics
#
bindsym {
	# Start a terminal
	$mod+Shift+Space exec $term

	# Kill focused window
	$mod+q kill

	# Start your launcher
	$mod+Space exec $menu

	# Reload the configuration file
	$mod+r reload

	# Exit sway (logs you out of your Wayland session)
	$mod+Shift+e exec swaynag \
		-t warning \
		-m 'What do you want to do?' \
		-B 'Poweroff' 'systemctl poweroff' \
		-B 'Reboot' 'systemctl reboot' \
		-B 'Exit sway' 'swaymsg exit'
	# Rofi power menu
	$mod+Shift+x exec rofi -show power-menu -modi power-menu:~/.local/bin/rofi-power-menu
	# Rofi bluetooth menu
	$mod+Shift+b exec --no-startup-id rofi-bluetooth
	# Rofi network manager
	$mod+Shift+n exec ~/.local/bin/rofi-network-manager
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

#
# Moving around
#
bindsym {
	# Move your focus around
	$mod+$left focus left
	$mod+$down focus down
	$mod+$up focus up
	$mod+$right focus right
	# Or use $mod+[up|down|left|right]
	$mod+Left focus left
	$mod+Down focus down
	$mod+Up focus up
	$mod+Right focus right
}

bindsym {
	# Move the focused window with the same, but add Shift
	$mod+Shift+$left move left
	$mod+Shift+$down move down
	$mod+Shift+$up move up
	$mod+Shift+$right move right
	# Ditto, with arrow keys
	$mod+Shift+Left move left
	$mod+Shift+Down move down
	$mod+Shift+Up move up
	$mod+Shift+Right move right
}

#
# Workspaces
#
bindsym --to-code {
	# Switch to workspace
	$mod+1 workspace number 1
	$mod+2 workspace number 2
	$mod+3 workspace number 3
	$mod+4 workspace number 4
	$mod+5 workspace number 5
	$mod+6 workspace number 6
	$mod+7 workspace number 7
	$mod+8 workspace number 8
	$mod+9 workspace number 9
	$mod+0 workspace number 10
	# Move focused container to workspace
	$mod+Shift+1 move container to workspace number 1
	$mod+Shift+2 move container to workspace number 2
	$mod+Shift+3 move container to workspace number 3
	$mod+Shift+4 move container to workspace number 4
	$mod+Shift+5 move container to workspace number 5
	$mod+Shift+6 move container to workspace number 6
	$mod+Shift+7 move container to workspace number 7
	$mod+Shift+8 move container to workspace number 8
	$mod+Shift+9 move container to workspace number 9
	$mod+Shift+0 move container to workspace number 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.
	$mod+tab workspace back_and_forth
	ctrl+alt+$right workspace next
	ctrl+alt+$left workspace prev
}

# Switch output
bindsym {
	# Vim keys
	$mod+Ctrl+$left focus output left
	$mod+Ctrl+$down focus output down
	$mod+Ctrl+$up focus output up
	$mod+Ctrl+$right focus output right
	# Arrows
	$mod+Ctrl+Left focus output left
	$mod+Ctrl+Down focus output down
	$mod+Ctrl+Up focus output up
	$mod+Ctrl+Right focus output right
}

# Move output
bindsym {
	# Vim keys
	$mod+Ctrl+Shift+$left move workspace to output left
	$mod+Ctrl+Shift+$down move workspace to output down
	$mod+Ctrl+Shift+$up move workspace to output up
	$mod+Ctrl+Shift+$right move workspace to output right
	# Arrows
	$mod+Ctrl+Shift+Left move workspace to output left
	$mod+Ctrl+Shift+Down move workspace to output down
	$mod+Ctrl+Shift+Up move workspace to output up
	$mod+Ctrl+Shift+Right move workspace to output right
}

#
# Layout stuff
#
bindsym {
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	$mod+c split none
	$mod+s layout toggle splith splitv
	$mod+v layout toggle splitv splith
	$mod+t layout tabbed

	# Switch the current container between different layout styles
	$mod+Shift+s splith
	$mod+Shift+v splitv

	# Make the current focus fullscreen
	$mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	$mod+Shift+Return floating toggle

	# Swap focus between the tiling area and the floating area
	$mod+Return focus mode_toggle

	# Move focus to the parent/child container
	$mod+o focus parent
	$mod+i focus child
}


# Scratchpad
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.
bindsym --to-code {
	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	$mod+minus scratchpad show

	# Move the currently focused window to the scratchpad
	$mod+Shift+minus move scratchpad
}

#
# Resizing containers
#
set $mode_resize "resize"
mode $mode_resize {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+w mode $mode_resize

#
# Marks
#
set $mode_mark "mark: [0]-[9]"
mode $mode_mark {
	bindsym 1 mark 1; mode "default"
	bindsym 2 mark 2; mode "default"
	bindsym 3 mark 3; mode "default"
	bindsym 4 mark 4; mode "default"
	bindsym 5 mark 5; mode "default"
	bindsym 6 mark 6; mode "default"
	bindsym 7 mark 7; mode "default"
	bindsym 8 mark 8; mode "default"
	bindsym 9 mark 9; mode "default"
	bindsym 0 mark 0; mode "default"
	bindsym d unmark; mode "default"
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Shift+m mode $mode_mark

set $mode_goto_mark "goto mark: [0]-[9]"
mode $mode_goto_mark {
	bindsym 1 [con_mark="1"] focus; mode "default"
	bindsym 2 [con_mark="2"] focus; mode "default"
	bindsym 3 [con_mark="3"] focus; mode "default"
	bindsym 4 [con_mark="4"] focus; mode "default"
	bindsym 5 [con_mark="5"] focus; mode "default"
	bindsym 6 [con_mark="6"] focus; mode "default"
	bindsym 7 [con_mark="7"] focus; mode "default"
	bindsym 8 [con_mark="8"] focus; mode "default"
	bindsym 9 [con_mark="9"] focus; mode "default"
	bindsym 0 [con_mark="0"] focus; mode "default"
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+m mode $mode_goto_mark

set $mode_pull_mark "pull mark: [0]-[9]"
mode $mode_pull_mark {
	bindsym 1 [con_mark="1"] move to current; mode "default"
	bindsym 2 [con_mark="2"] move to current; mode "default"
	bindsym 3 [con_mark="3"] move to current; mode "default"
	bindsym 4 [con_mark="4"] move to current; mode "default"
	bindsym 5 [con_mark="5"] move to current; mode "default"
	bindsym 6 [con_mark="6"] move to current; mode "default"
	bindsym 7 [con_mark="7"] move to current; mode "default"
	bindsym 8 [con_mark="8"] move to current; mode "default"
	bindsym 9 [con_mark="9"] move to current; mode "default"
	bindsym 0 [con_mark="0"] move to current; mode "default"
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Ctrl+m mode $mode_pull_mark


#
# System
#
bindsym --locked {
	XF86AudioPrev exec audio prev
	XF86AudioNext exec audio next
	XF86AudioPause exec audio pause
	XF86AudioPlay exec audio play
	XF86AudioMute exec audio mute
	XF86AudioLowerVolume exec audio lower
	XF86AudioRaiseVolume exec audio raise
	XF86MonBrightnessDown exec brightness down
	XF86MonBrightnessUp exec brightness up
	$mod+b exec killall -SIGUSR1 waybar
	$mod+Shift+q exec syscontrol
	$mod+e exec unmounter
	$mod+grave exec emojibar
	$mod+x exec gtklock -d
	Print exec screenshot
	Ctrl+Print exec screenshot -w
	Shift+Print exec screenshot -s
}

# TODO: enable touchpad gestures
